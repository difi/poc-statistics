version: '3.4'

services:
  query:
    image: ${REGISTRY}/statistics-query-elasticsearch:${VERSION}
    hostname: query
    ports:
      - "8080:8080"
    networks:
      net:
        aliases:
          - query
    deploy:
      mode: global
  ingest:
    image: ${REGISTRY}/statistics-ingest-elasticsearch:${VERSION}
    hostname: ingest
    ports:
      - "8081:8080"
    networks:
      net:
        aliases:
          - ingest
    deploy:
      mode: global
  authenticate:
    image: ${REGISTRY}/statistics-authenticate:${VERSION}
    ports:
      - "8083:8080"
    networks:
      - net
    deploy:
      mode: global
  elasticsearch:
    image: ${REGISTRY}/statistics-elasticsearch:${VERSION}
    ports:
      - "8082:9200"
    stop_grace_period: 5m
    environment:
      - discovery.seed_hosts=elasticsearch_gossip:9301
      - node.master=false
      - bootstrap.memory_lock=true # Fails in ondemand (windows and jenkins), so change to false to run locally.
    volumes:
      - statistics-data:/usr/share/elasticsearch/data
    networks:
      - net
    deploy:
      mode: global
  elasticsearch_gossip:
    image: ${REGISTRY}/statistics-elasticsearch:${VERSION}
    container_name: elasticsearch_gossip
    ports:
      - "9201:9200"
    command: bin/elasticsearch -Etransport.tcp.port=9301
    stop_grace_period: 5m
    environment:
      - node.name=elasticsearch_gossip
      - node.data=false
#      - cluster.initial_master_nodes=elasticsearch_gossip # only on first deploy, otherwise remove.
      - bootstrap.memory_lock=true # Fails in ondemand (windows and jenkins), so change to false to run locally.
    networks:
      - net
    deploy:
      mode: replicated
      replicas: 1

networks:
  net:
    driver: overlay
    attachable: true

volumes:
  statistics-data:
    external: true
